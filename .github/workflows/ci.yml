name: "CI"

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

permissions:
  contents: read

jobs:
  lint:
    name: "Lint"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Enable corepack'
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: "Install dependencies"
        run: yarn install --immutable

      - name: "Build"
        run: yarn build

      - name: "Lint"
        run: yarn lint -f ./dist/index.js

  build:
    name: "Build"
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Enable corepack'
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: "Install dependencies"
        run: yarn install --immutable

      - name: "Build"
        run: yarn build

  dependabot-merge:
    name: "Dependabot automerge"
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write
    needs: [ "build", "lint" ]
    if: github.actor == 'dependabot[bot]' && github.event_name == 'pull_request'
    steps:
      - uses: fastify/github-action-merge-dependabot@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

  semantic-release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: [ "build", "lint" ]
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    outputs:
      new-release-published: ${{ steps.release.outputs.new-release-published }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          ref: "master"
      - name: 'Enable corepack'
        run: corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --immutable

      - name: "disable postinstall"
        run: yarn pinst --disable

      - name: "Build"
        run: yarn build

      - name: "Release"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: yarn semantic-release
